{"version":3,"sources":["components/settings/background-color.jsx","components/settings/text-color.jsx","components/settings/link-color.jsx","components/settings/index.jsx","components/search.jsx","components/welcome.jsx","components/date-time.jsx","components/weather.jsx","lib/links.js","components/links.jsx","App.js","index.js"],"names":["BackgroundColor","props","backgroundColor","setBackgroundColor","setBackgroundInLocalStorage","e","localStorage","setItem","htmlFor","color","onChange","id","TextColor","textColor","setTextColor","setTextColorInLocalStorage","LinkColor","linkColor","setLinkColor","setLinkColorInLocalStorage","SettingsButton","styled","button","SettingsContainer","div","SettingsContainerColors","Settings","username","setUsername","useState","settingsActive","setSettingsActive","onClick","icon","faCog","type","placeholder","value","target","SearchButton","SearchContainer","SearchLabel","label","SearchInput","input","Search","searchActive","setSearchActive","searchText","setSearchText","faTimes","window","location","href","faSearch","WelcomeText","p","Welcome","welcomes","welcomeText","Math","floor","random","length","DateTimeText","DateTime","time","setTime","date","setDate","useEffect","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","interval","setInterval","min","getMinutes","sec","getSeconds","hour","getHours","getTime","clearInterval","WeatherText","Weather","weatherDesc","setWeatherDesc","temp","setTemp","xhr","XMLHttpRequest","open","onload","readyState","status","json","JSON","parse","responseText","main","toFixed","weather","description","console","log","send","getWeather","userLinkObjects","dutchie","url","name","localhost","google","stuff","LinkListContainer","LinkList","ul","LinkListTitle","lighten","LinkListItem","li","Link","a","Links","Object","keys","map","userLinkObject","userLink","style","BaseContainer","App","storedBackground","getItem","storedTextColor","storedLinkColor","storedUsername","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee535678.chunk.js","sourcesContent":["import { HexColorPicker, HexColorInput } from \"react-colorful\";\n\nfunction BackgroundColor(props) {\n  const { backgroundColor, setBackgroundColor } = props;\n  const setBackgroundInLocalStorage = (e) => {\n    setBackgroundColor(e);\n    localStorage.setItem(\"start-page-background\", e);\n  };\n  return (\n    <div>\n      <label htmlFor=\"backgroundColorInput\">Background Color</label>\n      <HexColorPicker\n        color={backgroundColor}\n        onChange={(e) => {\n          setBackgroundInLocalStorage(e);\n        }}\n      />\n      <HexColorInput\n        id=\"backgroundColorInput\"\n        color={backgroundColor}\n        onChange={(e) => {\n          setBackgroundInLocalStorage(e);\n        }}\n      />\n    </div>\n  );\n}\n\nexport default BackgroundColor;\n","import { HexColorPicker, HexColorInput } from \"react-colorful\";\n\nfunction TextColor(props) {\n  const { textColor, setTextColor } = props;\n  const setTextColorInLocalStorage = (e) => {\n    setTextColor(e);\n    localStorage.setItem(\"start-page-text-color\", e);\n  };\n  return (\n    <div>\n      <label htmlFor=\"textColorInput\">Text Color</label>\n      <HexColorPicker\n        color={textColor}\n        onChange={(e) => {\n          setTextColorInLocalStorage(e);\n        }}\n      />\n      <HexColorInput\n        id=\"textColorInput\"\n        color={textColor}\n        onChange={(e) => {\n          setTextColorInLocalStorage(e);\n        }}\n      />\n    </div>\n  );\n}\n\nexport default TextColor;\n","import { HexColorPicker, HexColorInput } from \"react-colorful\";\n\nfunction LinkColor(props) {\n  const { linkColor, setLinkColor } = props;\n  const setLinkColorInLocalStorage = (e) => {\n    setLinkColor(e);\n    localStorage.setItem(\"start-page-text-color\", e);\n  };\n  return (\n    <div>\n      <label htmlFor=\"linkColorInput\">Link Color</label>\n      <HexColorPicker\n        color={linkColor}\n        onChange={(e) => {\n          setLinkColorInLocalStorage(e);\n        }}\n      />\n      <HexColorInput\n        id=\"linkColorInput\"\n        color={linkColor}\n        onChange={(e) => {\n          setLinkColorInLocalStorage(e);\n        }}\n      />\n    </div>\n  );\n}\n\nexport default LinkColor;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCog } from \"@fortawesome/free-solid-svg-icons\";\nimport BackgroundColor from \"./background-color\";\nimport TextColor from \"./text-color\";\nimport LinkColor from \"./link-color\";\n\nconst SettingsButton = styled.button`\n  position: absolute;\n  top: 1rem;\n  right: 1rem;\n  background: rgba(0, 0, 0, 0);\n  border: 1px solid;\n  color: ${(props) => (props.linkColor ? props.linkColor : \"#2aa198\")};\n  border-radius: 3px;\n  padding: 0.3rem 0.5rem;\n`;\n\nconst SettingsContainer = styled.div`\n  max-width: 880px;\n  margin: 0 auto;\n`;\n\nconst SettingsContainerColors = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin: 1rem auto;\n  & label {\n    display: block;\n    width: 100%;\n    text-align: center;\n    margin: 0 auto 0.5rem;\n  }\n  & input {\n    width: calc(200px - 15px);\n    background: none;\n    border: 1px solid;\n    border-top: none;\n    border-radius: 0 0 3px 3px;\n    margin: -5px 0 0;\n    display: block;\n    padding: 10px 6px 6px;\n    color: ${(props) => (props.textColor ? props.textColor : \"#93a1a1\")};\n    text-align: center;\n  }\n`;\n\nfunction Settings(props) {\n  const {\n    backgroundColor,\n    setBackgroundColor,\n    textColor,\n    setTextColor,\n    linkColor,\n    setLinkColor,\n    username,\n    setUsername,\n  } = props;\n  const [settingsActive, setSettingsActive] = useState(false);\n\n  return (\n    <>\n      <SettingsButton\n        linkColor={linkColor}\n        onClick={() => setSettingsActive(!settingsActive)}\n      >\n        <FontAwesomeIcon icon={faCog} />\n      </SettingsButton>\n      {settingsActive ? (\n        <SettingsContainer>\n          <div>\n            <label htmlFor=\"usernameInput\">Name: </label>\n            <input\n              type=\"text\"\n              id=\"usernameInput\"\n              placeholder=\"Name\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n            />\n          </div>\n          <SettingsContainerColors textColor={textColor}>\n            <BackgroundColor\n              backgroundColor={backgroundColor}\n              setBackgroundColor={setBackgroundColor}\n            />\n            <TextColor textColor={textColor} setTextColor={setTextColor} />\n            <LinkColor linkColor={linkColor} setLinkColor={setLinkColor} />\n          </SettingsContainerColors>\n        </SettingsContainer>\n      ) : null}\n    </>\n  );\n}\n\nexport default Settings;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst SearchButton = styled.button`\n  position: absolute;\n  top: 1rem;\n  left: 1rem;\n  background: rgba(0, 0, 0, 0);\n  border: 1px solid;\n  color: ${(props) => (props.linkColor ? props.linkColor : \"#2aa198\")};\n  border-radius: 3px;\n  padding: 0.3rem 0.5rem;\n`;\n\nconst SearchContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-width: 750px;\n  margin: 0.5rem auto;\n`;\nconst SearchLabel = styled.label`\n  text-align: center;\n  font-size: 1.5rem;\n`;\nconst SearchInput = styled.input`\n  margin: 0.5em auto;\n  width: 100%;\n  color: ${(props) => (props.textColor ? props.textColor : \"#93a1a1\")};\n  background: none;\n  border: none;\n  border-bottom: 1px solid;\n  padding: 0.25rem 0;\n`;\n\nfunction Search(props) {\n  const { textColor } = props;\n  const [searchActive, setSearchActive] = useState(false);\n  const [searchText, setSearchText] = useState(\"\");\n  const handleSearch = () => {\n    window.location.href = `https://www.google.com/search?q=${searchText}`;\n  };\n  return (\n    <>\n      {!searchActive ? (\n        <SearchButton\n          onClick={() => {\n            setSearchActive(!searchActive);\n          }}\n        >\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchButton>\n      ) : (\n        <div>\n          <SearchButton\n            onClick={() => {\n              setSearchActive(!searchActive);\n            }}\n          >\n            <FontAwesomeIcon icon={faTimes} />\n          </SearchButton>\n          <SearchContainer>\n            <SearchLabel htmlFor=\"searchInput\">Search</SearchLabel>\n            <SearchInput\n              type=\"text\"\n              id=\"searchInput\"\n              value={searchText}\n              onChange={(e) => setSearchText(e.target.value)}\n              placeholder=\"What knowledge do you seek young padawan?\"\n              textColor={textColor}\n            />\n            {searchText && <button onClick={handleSearch}>Search</button>}\n          </SearchContainer>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default Search;\n","import styled from \"styled-components\";\n\nconst WelcomeText = styled.p`\n  text-align: center;\n  font-size: 3rem;\n`;\n\nfunction Welcome(props) {\n  const { username } = props;\n  const welcomes = [\"Suh\", \"Hello\", \"Welcome\"];\n  const welcomeText = welcomes[Math.floor(Math.random() * welcomes.length)];\n  return (\n    <WelcomeText>\n      {welcomeText} {username}\n    </WelcomeText>\n  );\n}\n\nexport default Welcome;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst DateTimeText = styled.p`\n  text-align: center;\n  font-size: 1.75rem;\n  margin: 0.5rem;\n`;\n\nfunction DateTime() {\n  const [time, setTime] = useState(null);\n  const [date, setDate] = useState(null);\n\n  const getDate = () => {\n    let today = new Date();\n    let dd = today.getDate();\n\n    let mm = today.getMonth() + 1;\n    let yyyy = today.getFullYear();\n    if (dd < 10) {\n      dd = \"0\" + dd;\n    }\n\n    if (mm < 10) {\n      mm = \"0\" + mm;\n    }\n    setDate(mm + \"-\" + dd + \"-\" + yyyy);\n  };\n\n  const getTime = () => {\n    let date = new Date(),\n      min = date.getMinutes(),\n      sec = date.getSeconds(),\n      hour = date.getHours();\n    setTime(\n      \"\" +\n        (hour < 10 ? \"0\" + hour : hour) +\n        \":\" +\n        (min < 10 ? \"0\" + min : min) +\n        \":\" +\n        (sec < 10 ? \"0\" + sec : sec)\n    );\n  };\n\n  useEffect(() => {\n    getDate();\n\n    const interval = setInterval(() => {\n      getTime();\n    }, 1000);\n    return () => clearInterval(interval);\n  });\n\n  return (\n    <>\n      {time ? (\n        <DateTimeText>{time}</DateTimeText>\n      ) : (\n        <DateTimeText>Calculating time...</DateTimeText>\n      )}\n      <DateTimeText>{date}</DateTimeText>\n    </>\n  );\n}\n\nexport default DateTime;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst WeatherText = styled.p`\n  text-align: center;\n  font-size: 1.75rem;\n  margin: 0.5rem;\n  & span{\n    text-transform: capitalize;\n  }\n`;\n\nfunction Weather() {\n  const [weatherDesc, setWeatherDesc] = useState(null);\n  const [temp, setTemp] = useState(null);\n\n  const getWeather = () => {\n    let xhr = new XMLHttpRequest();\n    // Request to open weather map\n    xhr.open(\n      \"GET\",\n      \"https://api.openweathermap.org/data/2.5/weather?id=5729080&units=imperial&appid=e5b292ae2f9dae5f29e11499c2d82ece\"\n    );\n    xhr.onload = () => {\n      if (xhr.readyState === 4) {\n        if (xhr.status === 200) {\n          let json = JSON.parse(xhr.responseText);\n          setTemp(json.main.temp.toFixed(0) + \"°F\");\n          setWeatherDesc(json.weather[0].description);\n        } else {\n          console.log(\"error msg: \" + xhr.status);\n        }\n      }\n    };\n    xhr.send();\n  };\n\n  useEffect(() => {\n    getWeather();\n  });\n  return (\n    <>\n      {weatherDesc && temp ? (\n        <WeatherText>\n          <span>{weatherDesc}</span> and {temp}\n        </WeatherText>\n      ) : (\n        <WeatherText>Fetching Weather...</WeatherText>\n      )}\n    </>\n  );\n}\n\nexport default Weather;\n","const userLinkObjects = {\n  dutchie: [\n    {\n      url: \"https://id.dutchie.com/app/UserHome#\",\n      name: \"OKTA\",\n    },\n    {\n      url: \"https://dutchie.atlassian.net/wiki/home\",\n      name: \"Wiki\",\n    },\n    {\n      url: \"https://github.com/GetDutchie\",\n      name: \"Github\",\n    },\n    {\n      url: \"https://dev.azure.com/leaflogix/Leaf%20Logix%20Apps\",\n      name: \"LeafLogix Apps\",\n    },\n    {\n      url: \"https://dutchie.atlassian.net/jira/projects\",\n      name: \"Jira\",\n    },\n    {\n      url: \"https://app.gusto.com/login\",\n      name: \"Gusto\",\n    },\n    {\n      url: \"https://secure.zenefits.com/accounts/login/?next=/dashboard/#/\",\n      name: \"Zenefits\",\n    },\n    {\n      url: \"https://rollbar.com/Dutchie/\",\n      name: \"Rollbar\",\n    },\n    {\n      url: \"https://dutchie.app.opsgenie.com/auth/login?targetUri=%2Falert%2Flist\",\n      name: \"Opsgenie\",\n    },\n    {\n      url: \"https://www.figma.com/login\",\n      name: \"Figma\",\n    },\n    {\n      url: \"https://signin.aws.amazon.com/signin?redirect_uri=https%3A%2F%2Fus-east-2.console.aws.amazon.com%2Fconsole%2Fhome%3Ffromtb%3Dtrue%26hashArgs%3D%2523%26isauthcode%3Dtrue%26region%3Dus-east-2%26state%3DhashArgsFromTB_us-east-2_6cabd1e5c9bb6592&client_id=arn%3Aaws%3Asignin%3A%3A%3Aconsole%2Fcanvas&forceMobileApp=0&code_challenge=zGHn4hKzVeoRmf4JuWN09TAMiI9dcvFFGZqIzGk8Ah4&code_challenge_method=SHA-256\",\n      name: \"AWS\",\n    },\n  ],\n  localhost: [\n    {\n      url: \"http://localhost:3000\",\n      name: \"3000\",\n    },\n    {\n      url: \"http://localhost:5000\",\n      name: \"5000\",\n    },\n    {\n      url: \"http://localhost:8000\",\n      name: \"8000\",\n    },\n    {\n      url: \"http://localhost:8888\",\n      name: \"8888\",\n    },\n  ],\n  google: [\n    {\n      url: \"https://mail.google.com\",\n      name: \"Gmail\",\n    },\n    {\n      url: \"https://drive.google.com\",\n      name: \"Drive\",\n    },\n    {\n      url: \"https://calendar.google.com\",\n      name: \"Calendar\",\n    },\n    {\n      url: \"https://admin.google.com\",\n      name: \"Admin\",\n    },\n  ],\n  stuff: [\n    {\n      url: \"https://github.com/\",\n      name: \"Github\",\n    },\n    {\n      url: \"https://old.reddit.com/r/all\",\n      name: \"Reddit\",\n    },\n  ],\n};\n\nexport default userLinkObjects;\n","import styled from \"styled-components\";\nimport { lighten } from \"polished\";\nimport userLinkObjects from \"../lib/links\";\n\nconst LinkListContainer = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  flex-wrap: wrap;\n`;\nconst LinkList = styled.ul`\n  border: 1px solid;\n  list-style: none;\n  width: 100%;\n  max-width: 200px;\n  min-width: 150px;\n  margin: 0.5rem auto;\n  border-radius: 3px;\n  padding: 0;\n`;\nconst LinkListTitle = styled.p`\n  text-align: center;\n  text-transform: uppercase;\n  margin-bottom: 0.5rem;\n  font-size: 1.25rem;\n  background-color: ${(props) =>\n    props.backgroundColor ? lighten(0.05, props.backgroundColor) : \"#073642\"};\n  padding: 0.5rem;\n  border-radius: 3px 3px 0 0;\n`;\nconst LinkListItem = styled.li`\n  margin: 0.5rem 1rem;\n`;\nconst Link = styled.a`\n  text-decoration: none;\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nfunction Links(props) {\n  const { linkColor, backgroundColor } = props;\n  return (\n    <LinkListContainer>\n      {Object.keys(userLinkObjects).map((userLinkObject) => {\n        return (\n          <LinkList key={userLinkObject}>\n            <LinkListTitle backgroundColor={backgroundColor}>\n              {userLinkObject}\n            </LinkListTitle>\n            {userLinkObjects[userLinkObject].map((userLink) => {\n              return (\n                <LinkListItem key={userLink.name}>\n                  <Link href={userLink.url} style={{ color: linkColor }}>\n                    {userLink.name}\n                  </Link>\n                </LinkListItem>\n              );\n            })}\n          </LinkList>\n        );\n      })}\n    </LinkListContainer>\n  );\n}\n\nexport default Links;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Settings from \"./components/settings/index\";\nimport Search from \"./components/search\";\nimport Welcome from \"./components/welcome\";\nimport DateTime from \"./components/date-time\";\nimport Weather from \"./components/weather\";\nimport Links from \"./components/links\";\n\nconst BaseContainer = styled.div`\n  height: 100%;\n  overflow: scroll;\n  padding: 3rem;\n`;\n\nfunction App() {\n  const [backgroundColor, setBackgroundColor] = useState(\"#073642\");\n  const [textColor, setTextColor] = useState(\"#93a1a1\");\n  const [linkColor, setLinkColor] = useState(\"#2aa198\");\n  const [username, setUsername] = useState(\"\");\n\n  useEffect(() => {\n    const storedBackground = localStorage.getItem(\"start-page-background\");\n    const storedTextColor = localStorage.getItem(\"start-page-text-color\");\n    const storedLinkColor = localStorage.getItem(\"start-page-link-color\");\n    const storedUsername = localStorage.getItem(\"start-page-username\");\n\n    if (storedBackground) {\n      setBackgroundColor(storedBackground);\n    }\n    if (storedTextColor) {\n      setTextColor(storedTextColor);\n    }\n    if (storedLinkColor) {\n      setLinkColor(storedLinkColor);\n    }\n    if (storedUsername) {\n      setUsername(storedUsername);\n    }\n  }, []);\n\n  return (\n    <BaseContainer\n      style={{\n        backgroundColor: backgroundColor,\n        color: textColor,\n      }}\n    >\n      <Settings\n        backgroundColor={backgroundColor}\n        setBackgroundColor={setBackgroundColor}\n        textColor={textColor}\n        setTextColor={setTextColor}\n        linkColor={linkColor}\n        setLinkColor={setLinkColor}\n        username={username}\n        setUsername={setUsername}\n      />\n      <Search textColor={textColor} />\n      <Welcome username={username} />\n      <DateTime />\n      <Weather />\n      <Links linkColor={linkColor} backgroundColor={backgroundColor} />\n    </BaseContainer>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}